{"version":3,"file":"static/js/316.d3030bcc.chunk.js","mappings":"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","sources":["Components/Jordaan/JordaanTopNav.jsx","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/AccordionItemContext.js","../node_modules/react-bootstrap/esm/AccordionBody.js","../node_modules/react-bootstrap/esm/AccordionButton.js","../node_modules/react-bootstrap/esm/AccordionHeader.js","../node_modules/react-bootstrap/esm/AccordionItem.js","../node_modules/react-bootstrap/esm/Accordion.js","Components/Accordion/Accordion.jsx","Components/Accordion/AccordionData.jsx","Components/Jordaan/JordaanWhiteHeaderSection.jsx"],"sourcesContent":["import SideButtons from \"../SideButtons\";\nimport {Header, HeaderNav, Menu, MobileMenu} from \"../Header/Header\";\nimport {Col, Navbar} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport React from \"react\";\n\nexport const JordaanTopNav = (props) => {\n  console.log('background: ', props);\n\n  return <>\n    <SideButtons/>\n    {/* Header Start */}\n    <Header topSpace={{md: true}} className={(props && props.background === 'white' ? 'bg-white' : '')} type=\"reverse-scroll\">\n      <HeaderNav theme=\"light\" expand=\"lg\"\n                 className=\"spasalon-header py-[0px] px-[35px] md:px-[15px] md:py-[20px] sm:px-0 border-b border-[#ffffff1a]\"\n                 fluid=\"fluid\" containerClass=\"md:pr-0\">\n        <Col className=\"col-5 col-lg-2 ps-lg-0 me-auto me-lg-0 md:!px-0\">\n          <Link aria-label=\"header logo\" className=\"flex items-center\" to=\"/\">\n            <Navbar.Brand className=\"inline-block p-0 m-0\">\n              <img className=\"default-logo\" width=\"163\" height=\"36\" loading=\"lazy\"\n                   src={`${process.env.PUBLIC_URL}/assets/img/webp/logo/logo-yellow-top.png`}\n                   data-rjs='/assets/img/webp/logo-white@2x.webp' alt='logo'/>\n              <img className=\"alt-logo\" width=\"163\" height=\"36\" loading=\"lazy\"\n                   src={`${process.env.PUBLIC_URL}/assets/img/webp/logo/logo-white-top.png`}\n                   data-rjs='/assets/img/webp/logo-gradient-tan-geraldine@2x.webp' alt='logo'/>\n              <img className=\"mobile-logo\" width=\"163\" height=\"36\" loading=\"lazy\"\n                   src={`${process.env.PUBLIC_URL}/assets/img/webp/logo/logo-white-top.png`}\n                   data-rjs='/assets/img/webp/logo-gradient-tan-geraldine@2x.webp' alt='logo'/>\n            </Navbar.Brand>\n          </Link>\n        </Col>\n        <Menu className=\"justify-center col-auto col-lg-8 menu-order md-position-initial md:hidden\" {...props} />\n        <MobileMenu className=\"order-last d-lg-none\" type=\"modern\" {...props} />\n        <Col className=\"col-auto text-right pr-0 col-lg-2 px-lg-0 md-no-padding md:!px-0\">\n        </Col>\n      </HeaderNav>\n    </Header>\n    {/* Header End */}\n  </>\n}","import * as React from 'react';\nexport function isAccordionItemSelected(activeEventKey, eventKey) {\n  return Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : activeEventKey === eventKey;\n}\nconst context = /*#__PURE__*/React.createContext({});\ncontext.displayName = 'AccordionContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Collapse from './Collapse';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * This component accepts all of [`Collapse`'s props](/docs/utilities/transitions#collapse-1).\n */\nconst AccordionCollapse = /*#__PURE__*/React.forwardRef(({\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  children,\n  eventKey,\n  ...props\n}, ref) => {\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-collapse');\n  return /*#__PURE__*/_jsx(Collapse, {\n    ref: ref,\n    in: isAccordionItemSelected(activeEventKey, eventKey),\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(Component, {\n      children: React.Children.only(children)\n    })\n  });\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext({\n  eventKey: ''\n});\ncontext.displayName = 'AccordionItemContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionBody = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  onExited,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-body');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  return /*#__PURE__*/_jsx(AccordionCollapse, {\n    eventKey: eventKey,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionBody.displayName = 'AccordionBody';\nexport default AccordionBody;","import * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  const {\n    activeEventKey,\n    onSelect,\n    alwaysOpen\n  } = useContext(AccordionContext);\n  return e => {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    let eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n    if (alwaysOpen) {\n      if (Array.isArray(activeEventKey)) {\n        if (activeEventKey.includes(eventKey)) {\n          eventKeyPassed = activeEventKey.filter(k => k !== eventKey);\n        } else {\n          eventKeyPassed = [...activeEventKey, eventKey];\n        }\n      } else {\n        // activeEventKey is undefined.\n        eventKeyPassed = [eventKey];\n      }\n    }\n    onSelect == null ? void 0 : onSelect(eventKeyPassed, e);\n    onClick == null ? void 0 : onClick(e);\n  };\n}\nconst AccordionButton = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  bsPrefix,\n  className,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  const accordionOnClick = useAccordionButton(eventKey, onClick);\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    onClick: accordionOnClick,\n    ...props,\n    \"aria-expanded\": Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, !isAccordionItemSelected(activeEventKey, eventKey) && 'collapsed')\n  });\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionButton from './AccordionButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionHeader = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'h2',\n  bsPrefix,\n  className,\n  children,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-header');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(AccordionButton, {\n      onClick: onClick,\n      children: children\n    })\n  });\n});\nAccordionHeader.displayName = 'AccordionHeader';\nexport default AccordionHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  eventKey,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-item');\n  const contextValue = useMemo(() => ({\n    eventKey\n  }), [eventKey]);\n  return /*#__PURE__*/_jsx(AccordionItemContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionItem.displayName = 'AccordionItem';\nexport default AccordionItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionBody from './AccordionBody';\nimport AccordionButton from './AccordionButton';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nimport AccordionHeader from './AccordionHeader';\nimport AccordionItem from './AccordionItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Accordion = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    activeKey,\n    bsPrefix,\n    className,\n    onSelect,\n    flush,\n    alwaysOpen,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'accordion');\n  const contextValue = useMemo(() => ({\n    activeEventKey: activeKey,\n    onSelect,\n    alwaysOpen\n  }), [activeKey, onSelect, alwaysOpen]);\n  return /*#__PURE__*/_jsx(AccordionContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...controlledProps,\n      className: classNames(className, prefix, flush && `${prefix}-flush`)\n    })\n  });\n});\nAccordion.displayName = 'Accordion';\nexport default Object.assign(Accordion, {\n  Button: AccordionButton,\n  Collapse: AccordionCollapse,\n  Item: AccordionItem,\n  Header: AccordionHeader,\n  Body: AccordionBody\n});","import React, { memo } from 'react'\n\n// Libraries\nimport { Accordion } from 'react-bootstrap'\nimport { m } from \"framer-motion\"\nimport { PropTypes } from \"prop-types\";\n\n// Data\nimport {AccordionData} from './AccordionData'\n\n// css\nimport \"../../Assets/scss/components/_accordion.scss\"\n\nconst Accordions = (props) => {\n\n    return (\n        <div className={`${props.theme} ${props.themeColor}${props.className ? ` ${props.className}` : \"\"}`}>\n            <Accordion defaultActiveKey={0}>\n                {\n                    props.data.map((item, key) => {\n                        return (\n                            <m.div className={`accordion-item-wrapper`}\n                                key={key}\n                                {...{ ...props.animation, transition: { delay: key * props.animationDelay } }}\n                            >\n                                <Accordion.Item key={key} eventKey={key}>\n                                    {item.title && \n                                        <Accordion.Header>\n                                            { item.time && <span className=\"panel-time\">{item.time}</span>}\n                                            { item.title && <span className=\"panel-title\">{item.title}</span>}\n                                            { item.author && <span className=\"panel-speaker\">{item.author}</span>}\n                                        </Accordion.Header>\n                                    }\n                                    {item.content && <Accordion.Body> {item.content} </Accordion.Body>}\n                                </Accordion.Item>\n                            </m.div>\n                        )\n                    })\n                }\n            </Accordion>\n        </div>\n    )\n}\n\nAccordions.defaultProps = {\n    data: AccordionData,\n    animationDelay: 0.2,\n    theme: \"accordion-style-01\",\n    themeColor: \"light\"\n}\n\nAccordion.propTypes = {\n    className: PropTypes.string,\n    data: PropTypes.arrayOf(\n        PropTypes.exact({\n            title: PropTypes.string,\n            content: PropTypes.string\n        })\n    ),\n    animation: PropTypes.object,\n    animationDelay: PropTypes.number,\n    theme: PropTypes.string,\n    themeColor: PropTypes.string,\n}\n\nexport default memo(Accordions)","const AccordionData = [\n    {\n        title: \"Common PayPal and credit card issues\",\n        content: \"Lorem ipsum is simply dummy text of the printing type setting and industry. Lorem ipsum has been the industry's standard dummy.\"\n    },\n    {\n        title: \"Lets collaborate and make an impact business\",\n        content: \"Lorem ipsum is simply dummy text of the printing type setting and industry. Lorem ipsum has been the industry's standard dummy.\"\n    },\n    {\n        title: \"A satisfied customer is the best business strats\",\n        content: \"Lorem ipsum is simply dummy text of the printing type setting and industry. Lorem ipsum has been the industry's standard dummy.\"\n    }\n]\n\nconst AccordionData02 = [\n    {\n        title: \"What do you mean by item and end product?\",\n        content: \"Lorem ipsum is simply dummy text of the printing and typesetting industry. Lorem ipsum has been the industry's standard dummy text ever when an unknown printer took a galley. Lorem ipsum is simply.\"\n    },\n    {\n        title: \"What are some examples of permitted end products?\",\n        content: \"Lorem ipsum is simply dummy text of the printing and typesetting industry. Lorem ipsum has been the industry's standard dummy text ever when an unknown printer took a galley. Lorem ipsum is simply.\"\n    },\n    {\n        title: \"Am i allowed to modify the item that i purchased?\",\n        content: \"Lorem ipsum is simply dummy text of the printing and typesetting industry. Lorem ipsum has been the industry's standard dummy text ever when an unknown printer took a galley. Lorem ipsum is simply.\"\n    },\n]\n\nconst AccordionData05 = [\n    {\n        time: \"06:00 - 07:00\",\n        title: 'Yoga and Pilates',\n        content: 'Lorem ipsum is simply dummy text of the printing and typesetting industry lorem ipsum.',\n        author: 'By Edward watson'\n    },\n    {\n        time: \"08:00 - 09:00\",\n        title: 'Energy Blast',\n        content: 'Lorem ipsum is simply dummy text of the printing and typesetting industry lorem ipsum.',\n        author: 'By Bryan jonhson'\n    },\n    {\n        time: \"10:00 - 11:00\",\n        title: 'Cardio Workout',\n        content: 'Lorem ipsum is simply dummy text of the printing and typesetting industry lorem ipsum.',\n        author: 'By Jeremy dupont',\n\n    },\n    {\n        time: \"11:00 - 12:00\",\n        title: 'Athletics Classes',\n        content: 'Lorem ipsum is simply dummy text of the printing and typesetting industry lorem ipsum.',\n        author: ' By Edward watson'\n    },\n    {\n        time: \"13:00 - 15:00\",\n        title: 'Boxercise',\n        content: 'Lorem ipsum is simply dummy text of the printing and typesetting industry lorem ipsum.',\n        author: ' By Bryan jonhson',\n\n    }\n]\n\nexport {AccordionData ,AccordionData02,AccordionData05};","import {Col, Container, Row} from \"react-bootstrap\";\nimport React from \"react\";\nimport {m} from \"framer-motion\";\nimport {Link as ScrollTo} from \"react-scroll\";\nimport {fadeIn} from \"../../Functions/GlobalAnimations\";\nimport Accordions from \"../Accordion/Accordion\";\n\nexport const JordaanWhiteHeaderSection = (props) => {\n\n  return <>\n    <section className=\"pt-[250px] pb-[150px] lg:pt-[90px] md:pt-[75px] sm:pt-[50px] cover-fill  md:pb-[75px] sm:pb-[50px]\">\n      {/*<section className=\"pt-[130px] pb-[350px] lg:pt-[90px] md:pt-[75px] sm:pt-[50px] cover-background md:pb-[75px] sm:pb-[50px]\" style={{ backgroundImage: 'url(https://via.placeholder.com/1920x1100)' }}>*/}\n      <Container>\n        <Row className=\"justify-center relative\">\n          <Col lg={7} sm={8} className=\"text-center mb-26 md:mb-12 xs:mb-16\">\n            <m.span className=\"inline-block font-serif text-jordaanText uppercase font-medium mb-[15px] tracking-[1px] xs:mb-[10px]\">\n              {props.header}\n            </m.span>\n            <m.h2 className=\"heading-5 font-serif text-jordaanText font-medium tracking-[-1px]\">\n              {props.content}\n            </m.h2>\n          </Col>\n          <ScrollTo to={props.scrollTo} offset={0} delay={0} spy={true} smooth={true} duration={800} className=\"absolute bottom-[-100px] left-1/2 w-auto inline-block p-0 -translate-x-1/2 sm:bottom-7 xs:bottom-[4.5rem] cursor-pointer\">\n            <i className=\"ti-arrow-down text-lg leading-[1] text-white bg-[#000000b3] p-[15px] xs:p-[10px] rounded-full flex justify-center items-center\"></i>\n          </ScrollTo>\n\n        </Row>\n      </Container>\n    </section>\n  </>\n}\n\n\n\nexport const JordaanColoredSection = (props) => {\n  let bgColor = 'bg-white';\n  let textColor = 'text-jordaanText';\n\n  if (props.variant === 'jordaanYellow') {\n    bgColor = 'bg-jordaanYellow';\n    textColor = 'text-jordaanText';\n  } else if (props.variant === 'jordaanText') {\n    bgColor = 'bg-jordaanText';\n    textColor = 'text-white';\n  }\n\n\n  return <>\n    <section id={props.id} className={`pt-[150px] pb-[150px] lg:pt-[90px] md:pt-[75px] sm:pt-[50px] md:pb-[75px] sm:pb-[50px] ${bgColor} bg-cover bg-no-repeat relative bg-center`}>\n      {/*<section className=\"pt-[130px] pb-[350px] lg:pt-[90px] md:pt-[75px] sm:pt-[50px] cover-background md:pb-[75px] sm:pb-[50px]\" style={{ backgroundImage: 'url(https://via.placeholder.com/1920x1100)' }}>*/}\n      <Container>\n        <Row className=\"mt-36 md:mt-24 sm:mt-16\">\n          <Col lg={5} md={6}>\n            <m.h2 className={`heading-5 font-serif font-medium leading-[46px] -tracking-[.5px] md:leading-[38px] ${textColor} md:m-0 sm:leading-[36px] xs:mb-[15px]`} {...{\n              ...fadeIn, transition: {delay: 0.2}}}>\n              {props.header}\n            </m.h2>\n            {props.subheader && <p className={`${textColor} mb-[20px]`}>{props.subheader}</p>}\n            {props.quote &&  <p className={`${textColor} mb-[20px]`}>{props.quote}</p>}\n\n          </Col>\n          <m.div md={6} className=\"col-lg-6 col-md-6 offset-lg-1\" {...{...fadeIn, transition: {delay: 0.4}}}>\n            {props.content.map(s => <p className={`w-[85%] lg:w-full mb-[20px] ${textColor}`}>{s}</p> )}\n\n          </m.div>\n        </Row>\n      </Container>\n    </section>\n  </>\n}\n\n\nexport const JordaanFAQSection = (props) => {\n  const textFAQHeader = \"Veelgestelde vragen\";\n\n  return (\n  <section id=\"faq\" className=\"pt-[150px] pb-[150px] lg:pt-[90px] md:pt-[75px] sm:pt-[50px] cover-background md:pb-[75px] sm:pb-[50px]\">\n    <Container>\n      <Row className=\"justify-center text-jordaanText font-serif\">\n        <Col>\n          <h6 className=\"font-serif text-jordaanText font-medium mb-[5%]\">{textFAQHeader}</h6>\n          <Accordions\n            theme=\"accordion-style-02\"\n            className=\"font-serif text-jordaanText\"\n            themeColor=\"light\"\n            data={props.data}\n          />\n        </Col>\n      </Row>\n    </Container>\n  </section>);\n\n\n}"],"names":["JordaanTopNav","props","console","log","_jsxs","_Fragment","children","_jsx","SideButtons","Header","topSpace","md","className","background","type","HeaderNav","theme","expand","fluid","containerClass","Col","Link","to","Navbar","Brand","width","height","loading","src","concat","process","alt","Menu","_objectSpread","MobileMenu","isAccordionItemSelected","activeEventKey","eventKey","Array","isArray","includes","context","React","displayName","AccordionCollapse","_ref","ref","_ref$as","as","Component","bsPrefix","_objectWithoutProperties","_excluded","useContext","AccordionContext","useBootstrapPrefix","Collapse","in","classNames","only","AccordionBody","onEnter","onEntering","onEntered","onExit","onExiting","onExited","AccordionItemContext","AccordionButton","onClick","accordionOnClick","_useContext","onSelect","alwaysOpen","e","eventKeyPassed","filter","k","_toConsumableArray","useAccordionButton","AccordionHeader","AccordionItem","contextValue","useMemo","Provider","value","Accordion","_useUncontrolled","useUncontrolled","activeKey","_useUncontrolled$as","flush","controlledProps","prefix","Object","assign","Button","Item","Body","Accordions","themeColor","defaultActiveKey","data","map","item","key","m","div","animation","transition","delay","animationDelay","title","time","author","content","defaultProps","propTypes","PropTypes","string","arrayOf","exact","object","number","memo","JordaanWhiteHeaderSection","Container","Row","lg","sm","span","header","h2","ScrollTo","scrollTo","offset","spy","smooth","duration","JordaanColoredSection","bgColor","textColor","variant","id","fadeIn","subheader","quote","s","JordaanFAQSection"],"sourceRoot":""}